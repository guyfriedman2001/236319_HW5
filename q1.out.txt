Standard ML of New Jersey [Version 110.99.8; 64-bit; April 25, 2025]
[opening hw5_q1.sml]
exception NoDeepThought
datatype tile = BLACKHOLE | DEEPTHOUGHT | FOURTY_TWO | LASER_GUN | MARVIN
datatype direction = DOWN | RIGHT
datatype 'a Seq = Cons of 'a * (unit -> 'a Seq) | Nil
datatype 'a DSeq = DCons of 'a * (unit -> 'a DSeq) * (unit -> 'a DSeq) | DNil
exception NoDeepThought
val good_path = fn : tile Seq -> bool
val get_flat_path = fn : 'a DSeq -> direction Seq -> 'a Seq
[autoloading]
[library $SMLNJ-BASIS/basis.cm is stable]
[library $SMLNJ-BASIS/(basis.cm):basis-common.cm is stable]
[autoloading done]
val find_all_paths = fn : int * int -> direction Seq list
val minimal_distance_for_deep_thought = fn : tile DSeq -> int
- ===TEST START===
val it = () : unit
val seq_to_list = fn : 'a Seq -> 'a list
val dseq_to_list = fn : 'a DSeq -> 'a list
val part1_1 = false : bool
val part1_2 = true : bool
val part1_3 = false : bool
val part1_4 = false : bool
val part1_5 = false : bool
val part2_1_list = [LASER_GUN,MARVIN] : tile list
val part2_2_list = [LASER_GUN,DEEPTHOUGHT] : tile list
val part3_1 = [[RIGHT]] : direction list list
val part3_2 = [[DOWN,RIGHT],[RIGHT,DOWN]] : direction list list
val part4_shortest_path_length1 = 2 : int
val part4_shortest_path_length2 = ~2 : int
- 
